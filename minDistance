class Solution {
public:
    /**
     * 
     * @param word1 string字符串 
     * @param word2 string字符串 
     * @return int整型
     */
    int minDistance(string word1, string word2) {
        if(word1 == word2)
            return 0;
        if(word1.empty())
            return word2.size();
        if(word2.empty())
            return word1.size();
        int length1 = word1.size();
        int length2 = word2.size();
        //保存状态
        vector<vector<int>> status(1+length1,vector<int>(1+length2,0));
        //初始状态
        status[0][1] = 1;
        status[1][0] = 1;
        //状态转换
        //第一行
        for(int i = 2;i <= length2;i++)
        {
            status[0][i] = status[0][i-1]+1;
        }
        //第一列
        for(int i = 2;i <= length1;i++)
        {
            status[i][0] = status[i-1][0]+1;
        }
        for(int i = 1;i <= length1;i++)
        {
            for(int j = 1;j <= length2;j++)
            {
                if(word1[i-1] != word2[j-1])
                    status[i][j] = min(status[i-1][j-1],min(status[i-1][j],status[i][j-1]))+1;
                else
                    status[i][j] = status[i-1][j-1];
            }
        }
        return status[length1][length2];
    }
};
