void invertTree(struct TreeNode* root)
{
    if(root == NULL)
        return;
    struct TreeNode* right = root->right;
    root->right = root->left;
    root->left = right;
    invertTree(root->left);
    invertTree(root->right);
}
bool isSameTree(struct TreeNode* s,struct TreeNode* t)
{
    if(s == NULL && t == NULL)
        return true;
    if(s == NULL && t != NULL)
        return false;
    if(s != NULL && t == NULL)
        return false;
    if(s->val != t->val)
        return false;

    return isSameTree(s->left,t->left)&&isSameTree(s->right,t->right);
}
bool isSymmetric(struct TreeNode* root){
    if(root == NULL)
        return true;
    //对左子树进行翻转，判断与右子树是否相等
    invertTree(root->left);
    return isSameTree(root->left,root->right);
}
