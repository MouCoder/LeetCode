class Solution {
public:
    void DFS(vector<string>& ret,int minute,int hour,int num)
    {
        //判断时间是否合法
        if(!(minute >= 0 && minute < 60 && hour >= 0 && hour < 12))
            return;
        //计算当前灯的个数---统计二进制中1的个数
        int count = 0;
        //对于分钟，只需要判断6位即可;对于小时，只需要判断四位即可
        for(int i = 0;i < 6;i++)
        {
            int tmp = 1<<i;
            if((minute & tmp) == tmp)
                count++;
            if((hour & tmp) == tmp)
                count++;
        }
        //判断是否满足条件
        if(count == num)
        {
            //构造时间
            string time = to_string(hour)+':'+(minute >= 10 ? to_string(minute):('0'+to_string(minute)));
            ret.push_back(time);
        }
        //继续递归
        if(minute < 60)
            DFS(ret,minute+1,hour,num);
    }
    vector<string> readBinaryWatch(int turnedOn) {
        vector<string> ret;
        for(int i = 0;i < 12;i++)
            DFS(ret,0,i,turnedOn);
        return ret;
    }
};
