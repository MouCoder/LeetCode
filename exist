class Solution {
public:
    bool DFS(vector<vector<char>>& board, string& word,int sr,int sc,int len)
    {
        //终止条件---sr/sc非法，已经找到，字符非法
        if(sr < 0 || sr >= board.size() || sc < 0 || sc >= board[0].size())
            return false;
        if(board[sr][sc] != word[len])
            return false;
        if(len == word.size()-1)
            return true;
        //将当前字符标记为已经查找过
        board[sr][sc] = '#';
        //向四个方向继续查找
        bool res = DFS(board,word,sr+1,sc,len+1) ||
                    DFS(board,word,sr-1,sc,len+1) ||
                    DFS(board,word,sr,sc+1,len+1) || 
                    DFS(board,word,sr,sc-1,len+1);
        //回溯
        board[sr][sc] = word[len];
        return res;
    }
    bool exist(vector<vector<char>>& board, string word) {
        for(int i = 0;i < board.size();i++)
        {
            for(int j = 0;j < board[0].size();j++)
            {
                if(board[i][j] == word[0])
                {
                    if(DFS(board,word,i,j,0))
                        return true;
                    else
                        continue;
                }
            }
        }
        return false;
    }
};
